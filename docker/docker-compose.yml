version: '2.4'

services:
  app:
    build:
      dockerfile: './docker/app/Dockerfile'
      context: '.'
    container_name: app
    command: ["start-gunicorn.sh"]
    image: &app app
    env_file:
      - .env
    networks:
      - celery-net
      - database-net
      - nginx-net
    volumes:
      - media-vol:/var/lib/media
      - static-vol:/var/lib/static
      - './app:/app'
    ports:
      - ${EXPOSE_APP}:8000
    depends_on:
      - worker
      - gpu-worker
      - psql

  gpu-worker:
    build:
      dockerfile: './docker/gpu-worker/Dockerfile'
      context: '.'
    command: ["celery", "worker", "-A", "game_recommendations", "-Q", "gpu-bound", "--concurrency=1", "--loglevel=INFO"]
    env_file:
      - .env
    runtime: nvidia
    networks:
      - celery-net
      - database-net
    volumes:
      - media-vol:/var/lib/media
      - './app:/app'
    depends_on:
      - celery-broker

  worker:
    image: *app
    command: ["celery", "worker", "-A", "game_recommendations", "-Q", "celery", "--loglevel=INFO"]
    env_file:
      - .env
    networks:
      - celery-net
      - database-net
    volumes:
      - media-vol:/var/lib/media
      - './app:/app'
    depends_on:
      - celery-broker

  flower:
    image: mher/flower
    env_file:
      - .env
    networks:
      - celery-net
    volumes:
      - './app:/app'
    depends_on:
      - celery-broker
    ports:
      - ${EXPOSE_FLOWER}:5555

  psql:
    image: "postgres:11-alpine"
    networks:
      - database-net
    volumes:
      - database-vol:/var/lib/postgresql/data
      - './docker/psql/scripts/init-db.sh:/init-db.sh'
    environment:
      - POSTGRES_DB=${PSQL_DB_NAME}
      - POSTGRES_USER=${PSQL_DB_USER}
      - POSTGRES_PASSWORD=${PSQL_DB_PASS}
    ports:
      - ${EXPOSE_DB}:5432

  celery-broker:
    image: "rabbitmq:3.7-alpine"
    volumes:
      - './docker/celery-broker/data.vlm:/var/lib/rabbitmq'
    networks:
      - celery-net
    ports:
      - ${EXPOSE_RABBITMQ}:5672

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    networks:
      - nginx-net
    volumes:
      - media-vol:/var/www/media
      - static-vol:/var/www/static
    depends_on:
      - app
    ports:
      - 80:80

networks:
  celery-net:
  database-net:
  nginx-net:

volumes:
  database-vol:
  media-vol:
  static-vol:
